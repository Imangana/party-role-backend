/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.*;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.openapitools.model.Error;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-06-21T17:10:52.617229+05:30[Asia/Colombo]", comments = "Generator version: 7.13.0")
@Validated
@Tag(name = "partyRole", description = "the partyRole API")
public interface PartyRoleApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /partyRole : Creates a PartyRole
     * This operation creates a PartyRole entity.
     *
     * @param partyRole The PartyRole to be created (required)
     * @return Created (status code 201)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "createPartyRole",
        summary = "Creates a PartyRole",
        description = "This operation creates a PartyRole entity.",
        tags = { "partyRole" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = PartyRole.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            })
        }
    )

    @RequestMapping(
        method = RequestMethod.POST,
        value = "/partyRole",
        produces = { "application/json;charset=utf-8" },
        consumes = { "application/json;charset=utf-8" }
    )

    default ResponseEntity<PartyRole> createPartyRole(
            @Parameter(name = "partyRole", description = "The PartyRole to be created", required = true)
            @Valid @RequestBody PartyRoleCreate partyRole
    ) {
        PartyRole response = new PartyRole();
        response.setId("dummy-id-001");
        response.setHref("https://my.api/partyRole/dummy-id-001");

        response.setName(partyRole.getName());
        response.setStatus(partyRole.getStatus());
        if (partyRole.getStatusReason() != null) {
            response.setStatusReason(partyRole.getStatusReason());
        } else {
            response.setStatusReason("unknown"); // or any default string
        }

        response.setAccount(partyRole.getAccount());

        response.setAgreement(partyRole.getAgreement());

// Fix characteristic nested objects
        if (partyRole.getCharacteristic() != null) {
            for (Characteristic characteristic : partyRole.getCharacteristic()) {
                characteristic.setAtBaseType("Characteristic");
                characteristic.setAtType("Characteristic");
                characteristic.setAtSchemaLocation(URI.create("https://my.api/schema/Characteristic"));
            }
        }
        response.setCharacteristic(partyRole.getCharacteristic());

// Fix contactMedium nested objects
        if (partyRole.getContactMedium() != null) {
            for (ContactMedium cm : partyRole.getContactMedium()) {
                cm.setAtBaseType("ContactMedium");
                cm.setAtType("ContactMedium");
                cm.setAtSchemaLocation(URI.create("https://my.api/schema/ContactMedium"));

                // Fix 'preferred' boolean field
                if (cm.getPreferred() == null) {
                    cm.setPreferred(false);
                }

                // Fix validFor field - must be an object with string datetime fields
                if (cm.getValidFor() == null) {
                    TimePeriod defaultValidFor = new TimePeriod();
                    defaultValidFor.setStartDateTime(OffsetDateTime.parse(OffsetDateTime.now().minusDays(1).toString()));
                    defaultValidFor.setEndDateTime(OffsetDateTime.parse(OffsetDateTime.now().toString()));
                    cm.setValidFor(defaultValidFor);
                } else {
                    if (cm.getValidFor().getStartDateTime() == null) {
                        cm.getValidFor().setStartDateTime(OffsetDateTime.parse(OffsetDateTime.now().minusDays(1).toString()));
                    }
                    if (cm.getValidFor().getEndDateTime() == null) {
                        cm.getValidFor().setEndDateTime(OffsetDateTime.parse(OffsetDateTime.now().toString()));
                    }
                }
            }
        }

        response.setContactMedium(partyRole.getContactMedium());

        response.setCreditProfile(partyRole.getCreditProfile());
        response.setPaymentMethod(partyRole.getPaymentMethod());

        // Fix relatedParty nested objects
        if (partyRole.getRelatedParty() != null) {
            for (RelatedParty rp : partyRole.getRelatedParty()) {
                rp.setAtBaseType("RelatedParty");
                rp.setAtType("RelatedParty");
                rp.setAtSchemaLocation(URI.create("https://my.api/schema/RelatedParty"));
            }
        }
        response.setRelatedParty(partyRole.getRelatedParty());
        response.setValidFor(partyRole.getValidFor());

// Fix engagedParty nested object
        RelatedParty engagedParty = partyRole.getEngagedParty();
        if (engagedParty != null) {
            engagedParty.setAtBaseType("RelatedParty");
            engagedParty.setAtType("RelatedParty");
            engagedParty.setAtSchemaLocation(URI.create("https://my.api/schema/RelatedParty"));
            response.setEngagedParty(engagedParty);
        }

// Set required type metadata for PartyRole itself
        response.setAtType("PartyRole");
        response.setAtBaseType("PartyRole");
        response.setAtSchemaLocation(URI.create("https://my.api/schema/PartyRole"));

        return ResponseEntity.status(HttpStatus.CREATED).body(response);
    }


    /**
     * DELETE /partyRole/{id} : Deletes a PartyRole
     * This operation deletes a PartyRole entity.
     *
     * @param id Identifier of the PartyRole (required)
     * @return Deleted (status code 204)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "deletePartyRole",
        summary = "Deletes a PartyRole",
        description = "This operation deletes a PartyRole entity.",
        tags = { "partyRole" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Deleted"),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/partyRole/{id}",
        produces = { "application/json;charset=utf-8" }
    )
    
    default ResponseEntity<Void> deletePartyRole(
        @Parameter(name = "id", description = "Identifier of the PartyRole", required = true, in = ParameterIn.PATH) @PathVariable("id") String id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json;charset=utf-8"))) {
                    String exampleString = "{ \"reason\" : \"reason\", \"code\" : \"code\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"message\" : \"message\", \"referenceError\" : \"https://openapi-generator.tech\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json;charset=utf-8", exampleString);
                    break;
                }

            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /partyRole : List or find PartyRole objects
     * This operation list or find PartyRole entities
     *
     * @param fields Comma-separated properties to be provided in response (optional)
     * @param offset Requested index for start of resources to be provided in response (optional)
     * @param limit Requested number of resources to be provided in response (optional)
     * @return Success (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "listPartyRole",
        summary = "List or find PartyRole objects",
        description = "This operation list or find PartyRole entities",
        tags = { "partyRole" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json;charset=utf-8", array = @ArraySchema(schema = @Schema(implementation = PartyRole.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/partyRole",
        produces = { "application/json;charset=utf-8" }
    )
    
    default ResponseEntity<List<PartyRole>> listPartyRole(
        @Parameter(name = "fields", description = "Comma-separated properties to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "fields", required = false) String fields,
        @Parameter(name = "offset", description = "Requested index for start of resources to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false) Integer offset,
        @Parameter(name = "limit", description = "Requested number of resources to be provided in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false) Integer limit
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json;charset=utf-8"))) {
                    String exampleString = "[ { \"contactMedium\" : [ { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"mediumType\" : \"mediumType\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"preferred\" : true, \"characteristic\" : { \"country\" : \"country\", \"city\" : \"city\", \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"socialNetworkId\" : \"socialNetworkId\", \"emailAddress\" : \"emailAddress\", \"phoneNumber\" : \"phoneNumber\", \"stateOrProvince\" : \"stateOrProvince\", \"@baseType\" : \"@baseType\", \"faxNumber\" : \"faxNumber\", \"postCode\" : \"postCode\", \"street1\" : \"street1\", \"street2\" : \"street2\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } }, { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"mediumType\" : \"mediumType\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"preferred\" : true, \"characteristic\" : { \"country\" : \"country\", \"city\" : \"city\", \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"socialNetworkId\" : \"socialNetworkId\", \"emailAddress\" : \"emailAddress\", \"phoneNumber\" : \"phoneNumber\", \"stateOrProvince\" : \"stateOrProvince\", \"@baseType\" : \"@baseType\", \"faxNumber\" : \"faxNumber\", \"postCode\" : \"postCode\", \"street1\" : \"street1\", \"street2\" : \"street2\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } } ], \"creditProfile\" : [ { \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\", \"creditScore\" : 6, \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"creditRiskRating\" : 0, \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\", \"creditScore\" : 6, \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"creditRiskRating\" : 0, \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"agreement\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"relatedParty\" : [ { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"characteristic\" : [ { \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"value\" : \"{}\" }, { \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"value\" : \"{}\" } ], \"statusReason\" : \"statusReason\", \"@baseType\" : \"@baseType\", \"name\" : \"name\", \"paymentMethod\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"account\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"engagedParty\" : { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, \"status\" : \"status\" }, { \"contactMedium\" : [ { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"mediumType\" : \"mediumType\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"preferred\" : true, \"characteristic\" : { \"country\" : \"country\", \"city\" : \"city\", \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"socialNetworkId\" : \"socialNetworkId\", \"emailAddress\" : \"emailAddress\", \"phoneNumber\" : \"phoneNumber\", \"stateOrProvince\" : \"stateOrProvince\", \"@baseType\" : \"@baseType\", \"faxNumber\" : \"faxNumber\", \"postCode\" : \"postCode\", \"street1\" : \"street1\", \"street2\" : \"street2\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } }, { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"mediumType\" : \"mediumType\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"preferred\" : true, \"characteristic\" : { \"country\" : \"country\", \"city\" : \"city\", \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"socialNetworkId\" : \"socialNetworkId\", \"emailAddress\" : \"emailAddress\", \"phoneNumber\" : \"phoneNumber\", \"stateOrProvince\" : \"stateOrProvince\", \"@baseType\" : \"@baseType\", \"faxNumber\" : \"faxNumber\", \"postCode\" : \"postCode\", \"street1\" : \"street1\", \"street2\" : \"street2\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } } ], \"creditProfile\" : [ { \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\", \"creditScore\" : 6, \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"creditRiskRating\" : 0, \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\", \"creditScore\" : 6, \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"creditRiskRating\" : 0, \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"agreement\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"relatedParty\" : [ { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"characteristic\" : [ { \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"value\" : \"{}\" }, { \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"value\" : \"{}\" } ], \"statusReason\" : \"statusReason\", \"@baseType\" : \"@baseType\", \"name\" : \"name\", \"paymentMethod\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"account\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"engagedParty\" : { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, \"status\" : \"status\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json;charset=utf-8", exampleString);
                    break;
                }

            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /partyRole/{id} : Updates partially a PartyRole
     * This operation updates partially a PartyRole entity.
     *
     * @param id Identifier of the PartyRole (required)
     * @param partyRole The PartyRole to be updated (required)
     * @return Updated (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "patchPartyRole",
        summary = "Updates partially a PartyRole",
        description = "This operation updates partially a PartyRole entity.",
        tags = { "partyRole" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Updated", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = PartyRole.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
            method = RequestMethod.PATCH,
            value = "/partyRole/{id}",
            produces = { "application/json;charset=utf-8" },
            consumes = { "application/json;charset=utf-8" }
    )
    ResponseEntity<PartyRole> patchPartyRole(
            @Parameter(name = "id", required = true, in = ParameterIn.PATH)
            @PathVariable("id") String id,

            @Parameter(name = "partyRole", required = true)
            @Valid @RequestBody PartyRoleUpdate partyRole
    );


    /**
     * GET /partyRole/{id} : Retrieves a PartyRole by ID
     * This operation retrieves a PartyRole entity. Attribute selection is enabled for all first level attributes.
     *
     * @param id Identifier of the PartyRole (required)
     * @param fields Comma-separated properties to provide in response (optional)
     * @return Success (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     *         or Method Not allowed (status code 405)
     *         or Conflict (status code 409)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "retrievePartyRole",
        summary = "Retrieves a PartyRole by ID",
        description = "This operation retrieves a PartyRole entity. Attribute selection is enabled for all first level attributes.",
        tags = { "partyRole" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = PartyRole.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Not Found", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "405", description = "Method Not allowed", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "409", description = "Conflict", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json;charset=utf-8", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/partyRole/{id}",
        produces = { "application/json;charset=utf-8" }
    )
    
    default ResponseEntity<PartyRole> retrievePartyRole(
        @Parameter(name = "id", description = "Identifier of the PartyRole", required = true, in = ParameterIn.PATH) @PathVariable("id") String id,
        @Parameter(name = "fields", description = "Comma-separated properties to provide in response", in = ParameterIn.QUERY) @Valid @RequestParam(value = "fields", required = false) String fields
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json;charset=utf-8"))) {
                    String exampleString = "{ \"contactMedium\" : [ { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"mediumType\" : \"mediumType\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"preferred\" : true, \"characteristic\" : { \"country\" : \"country\", \"city\" : \"city\", \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"socialNetworkId\" : \"socialNetworkId\", \"emailAddress\" : \"emailAddress\", \"phoneNumber\" : \"phoneNumber\", \"stateOrProvince\" : \"stateOrProvince\", \"@baseType\" : \"@baseType\", \"faxNumber\" : \"faxNumber\", \"postCode\" : \"postCode\", \"street1\" : \"street1\", \"street2\" : \"street2\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } }, { \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"mediumType\" : \"mediumType\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"preferred\" : true, \"characteristic\" : { \"country\" : \"country\", \"city\" : \"city\", \"@type\" : \"@type\", \"contactType\" : \"contactType\", \"socialNetworkId\" : \"socialNetworkId\", \"emailAddress\" : \"emailAddress\", \"phoneNumber\" : \"phoneNumber\", \"stateOrProvince\" : \"stateOrProvince\", \"@baseType\" : \"@baseType\", \"faxNumber\" : \"faxNumber\", \"postCode\" : \"postCode\", \"street1\" : \"street1\", \"street2\" : \"street2\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } } ], \"creditProfile\" : [ { \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\", \"creditScore\" : 6, \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"creditRiskRating\" : 0, \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"creditProfileDate\" : \"2000-01-23T04:56:07.000+00:00\", \"creditScore\" : 6, \"@baseType\" : \"@baseType\", \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"creditRiskRating\" : 0, \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"agreement\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"validFor\" : { \"startDateTime\" : \"2000-01-23T04:56:07.000+00:00\", \"endDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }, \"@type\" : \"@type\", \"relatedParty\" : [ { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"characteristic\" : [ { \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"value\" : \"{}\" }, { \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"valueType\" : \"valueType\", \"name\" : \"name\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"value\" : \"{}\" } ], \"statusReason\" : \"statusReason\", \"@baseType\" : \"@baseType\", \"name\" : \"name\", \"paymentMethod\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\", \"account\" : [ { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, { \"@referredType\" : \"@referredType\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" } ], \"engagedParty\" : { \"@referredType\" : \"@referredType\", \"role\" : \"role\", \"@baseType\" : \"@baseType\", \"@type\" : \"@type\", \"name\" : \"name\", \"id\" : \"id\", \"href\" : \"href\", \"@schemaLocation\" : \"https://openapi-generator.tech\" }, \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json;charset=utf-8", exampleString);
                    break;
                }

            }

        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

    @PatchMapping(value = "/partyRole/{id}", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    ResponseEntity<PartyRole> patchPartyRole(
            @PathVariable("id") String id,
            @RequestBody Map<String, Object> updates);
}
